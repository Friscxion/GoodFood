networks:
  goodfood:
    driver: bridge
services:
  users-db:
    container_name: users-db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=prisma
      - POSTGRES_PASSWORD=prismagoodfood
      - POSTGRES_DB=users
    volumes:
      - './users/db/data:/var/lib/postgresql/data'
    networks:
      - goodfood

  restaurants-db:
    container_name: restaurants-db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=prisma
      - POSTGRES_PASSWORD=prismagoodfood
      - POSTGRES_DB=restaurants
    volumes:
      - './restaurants/db/data:/var/lib/postgresql/data'
    networks:
      - goodfood

  plats-db:
    container_name: plats-db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=prisma
      - POSTGRES_PASSWORD=prismagoodfood
      - POSTGRES_DB=plats
    volumes:
      - './plats/db/data:/var/lib/postgresql/data'
    networks:
      - goodfood

  commandes-db:
    container_name: commandes-db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=prisma
      - POSTGRES_PASSWORD=prismagoodfood
      - POSTGRES_DB=commandes
    volumes:
      - './commandes/db/data:/var/lib/postgresql/data'
    networks:
      - goodfood

  users-api:
    stdin_open: true
    image: 'rg.fr-par.scw.cloud/goodfood/users-api:latest'
    build:
      context: './users/api'
      dockerfile: Dockerfile
    container_name: users-api
    ports:
      - '3001:3000'
    networks:
      - goodfood
    depends_on:
      - users-db

  auth-api:
    stdin_open: true
    image: 'rg.fr-par.scw.cloud/goodfood/auth-api:latest'
    build:
      context: './auth/api'
      dockerfile: Dockerfile
    container_name: auth-api
    ports:
      - '3002:3000'
    networks:
      - goodfood
    depends_on:
      - users-api

  restaurants-api:
    stdin_open: true
    image: 'rg.fr-par.scw.cloud/goodfood/restaurants-api:latest'
    build:
      context: './restaurants/api'
      dockerfile: Dockerfile
    container_name: restaurants-api
    ports:
      - '3003:3000'
    networks:
      - goodfood
    depends_on:
      - restaurants-db

  plats-api:
    stdin_open: true
    image: 'rg.fr-par.scw.cloud/goodfood/plats-api:latest'
    build:
      context: './plats/api'
      dockerfile: Dockerfile
    container_name: plats-api
    ports:
      - '3004:3000'
    networks:
      - goodfood
    depends_on:
      - plats-db

  commandes-api:
    stdin_open: true
    image: 'rg.fr-par.scw.cloud/goodfood/commandes-api:latest'
    build:
      context: './commandes/api'
      dockerfile: Dockerfile
    container_name: commandes-api
    ports:
      - '3005:3000'
    networks:
      - goodfood
    depends_on:
      - commandes-db

  front-end:
    stdin_open: true
    image: 'rg.fr-par.scw.cloud/goodfood/front-end:latest'
    build:
      context: './front-end'
      dockerfile: Dockerfile
    container_name: front-end
    ports:
      - '80:3000'
    networks:
      - goodfood
